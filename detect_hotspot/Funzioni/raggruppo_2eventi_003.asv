function state = raggruppo_2eventi_003(frame_1, frame_2, Rows, Columns)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Date: 2024-01-16 Last modification: 2024-07-03
%Author: Cristina Zuccali
%raggruppo_eventi(peak, type, frame_start)
%
%controlla se frame successivi detectano lo stesso evento. Viene fatto
%ordinando gli eventi del frame 2 sulla base del frame 1. Tutti gli eventi
%nuovi vengono aggiunti alla fine.
%
%   'frame_1' = 2D array containing information about detected events:
%           position (1st column), amplitude (2nd column).
%   'frame_2' = 2D array containing information about detected events:
%           position (1st column), amplitude (2nd column).
%   'state' = same events of frame_2 but ordered according toi frame_1
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    state = []; 

    %fr2_ordered = [];
    if isempty(frame_2) == 0 %isempty(frame_1) == 0 & isempty(frame_2) == 0

        state = zeros(size(frame_1,1),2); 
        
        numero_eventi_2 = length(frame_2(:,1));

        eventi_1 = frame_1;
        eventi_2 = frame_2;

        eventi_2_new = [];
        [data_x, data_y] = meshgrid(1:Columns, 1:Rows);
        not_assigned = ones(1,numero_eventi_2); %per ora sono tutti non assegnati
 
        %gli altri punti
        i = 1; %indice eventi del primo frame. 

        % NOOOOO Quelli che matchano nel secondo dovranno avere stesso indice.
        % esempio: max_coord1 = [234 312 12] significa che ho tre eventi nel
        % primo frame. Se nel secondo ho sempre tre eventi e il match dei secondi due, e non
        % del primo: max_coord2 = [0 311 13 452] NOOOOOOO

        while i <= length(eventi_2(:,1)) %ciclo sugli eventi del SECONDO frame
            
            %Coordinate picco_1
            y_2 = data_y(eventi_2(i,1));
            x_2 = data_x(eventi_2(i,1));

            %Coordinate primi vicini
            coord_primi = [ x_2, y_2; (x_2 - 1) (y_2 - 1); (x_2) (y_2 - 1); (x_2 + 1) (y_2 - 1); (x_2 - 1) (y_2); (x_2 + 1) (y_2); (x_2 - 1) (y_2 + 1); (x_2) (y_2 + 1); (x_2 + 1) (y_2+1)];

            stato_singolo = 0;
            j = 1;

            while j <= size(eventi_1,1) & stato_singolo == 0
                
                %Coordinate picco_2
                if eventi_1(j,1) ~= 0
                    y_1 = data_y(eventi_1(j,1));
                    x_1 = data_x(eventi_1(j,1));

                    if eventi_1(j,2)*eventi_2(i,2) > 0      %picchi esistono e sono dello stesso tipo (Ã¨ importante, pensaci!)
    
                        k = 1;
                        while k<=9 & stato_singolo == 0   
                            
                            if x_1 == coord_primi(k,1) && y_1 == coord_primi(k,2)
                                stato_singolo = 1;
                                state(j,:) = eventi_2(i,:);
                                %fr2_ordered(end,:) = [];
                                not_assigned(1,i) = 0; %sono riuscito ad assegnarlo
                            end
                           k = k+1;              
                        end                   
                    end
                end
                    j = j + 1;
                end
                i = i +1;
            end
        end
        %assegno gli eventi non assegnati
        for k = 1:numero_eventi_2
            if not_assigned(1,k) == 1
                state = [state;eventi_2(k,:)];
                %fr2_ordered = [fr2_ordered,eventi_2(k,:)];
            end
        end
    end
end

